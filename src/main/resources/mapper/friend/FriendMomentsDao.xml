<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.modules.friend.dao.FriendMomentsDao">

    <!-- 字段集 -->
    <sql id="baseSql">
        select fm.moment_id, fm.user_id, fm.content, fm.location, fm.visibility, fm.create_time, fm.update_time, fm.is_deleted,
               cu.nickname, cu.portrait
        from friend_moments fm
        left join chat_user cu on fm.user_id = cu.user_id
    </sql>

    <!-- 查询列表字段 -->
    <select id="queryList" resultType="com.platform.modules.friend.domain.FriendMoments">
        <include refid="baseSql"/>
        <where>
            <!--
            <if test="momentId != null and momentId != ''">
                and moment_id = #{momentId}
            </if>
            -->
            <!--
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            -->
            <!--
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            -->
            <!--
            <if test="location != null and location != ''">
                and location = #{location}
            </if>
            -->
            <!--
            <if test="visibility != null and visibility != ''">
                and visibility = #{visibility}
            </if>
            -->
            <!--
            <if test="createTime != null and createTime != ''">
                and create_time = #{createTime}
            </if>
            -->
        </where>
    </select>

    <!-- 获取朋友圈动态并关联用户昵称和头像 -->
    <!-- 查询结果为：1广场可见信息 2自己发布的朋友圈信息 3自己的好友朋友圈信息 -->
    <select id="getMomentsWithUserInfo" resultType="java.util.Map">
        <include refid="baseSql"/>
        <where>
            (fm.visibility = 0 or (fm.user_id=#{userId})
            or (fm.visibility = 1 and fm.user_id!=#{userId}
            and fm.user_id in (
            select cf.current_id
            from chat_friend cf
            where cf.user_id = #{userId}
            ))
            )
        </where>
        ORDER BY fm.create_time DESC
    </select>
    <select id="getMediasByMomentId" resultType="com.platform.modules.friend.vo.MediasVo01">
        SELECT type, url, thumbnail
        FROM friend_medias
        WHERE moment_id = #{momentId}
    </select>
    <select id="getCommentsByMomentId" resultType="com.platform.modules.friend.vo.CommentsVo01">
        SELECT
            CASE WHEN fc.source = 1 THEN true ELSE false END AS source,
            cu1.nickname AS from_user,
            cu2.nickname AS to_user,
            fc.content
        FROM
            friend_comments fc
        LEFT JOIN chat_user cu1 ON fc.user_id = cu1.user_id
        LEFT JOIN chat_user cu2 ON fc.reply_to = cu2.user_id
        WHERE
            fc.moment_id = #{momentId}
    </select>
    <select id="getLikesNicknamesByMomentId" resultType="java.lang.String">
        SELECT chat_user.nickname
        FROM friend_likes
        JOIN chat_user ON chat_user.user_id = friend_likes.user_id
        WHERE friend_likes.moment_id = #{momentId}
    </select>

    <!-- 新增查询：根据userId查询存在媒体的朋友圈动态（关联用户信息，且排除visibility=2的记录） -->
    <select id="getMomentsById" resultType="java.util.Map">
        <include refid="baseSql"/>
        INNER JOIN (SELECT DISTINCT moment_id FROM friend_medias) fm2
        ON fm.moment_id = fm2.moment_id  <!-- 子查询去重媒体记录，避免重复关联 -->
        <where>
            fm.user_id = #{userId}
            AND fm.visibility != 2
        </where>
        ORDER BY fm.create_time DESC
    </select>

</mapper>